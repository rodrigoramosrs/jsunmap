name: Publish .NET Core binaries

on:
  push:
    branches:
      - main
env:
  ACTIONS_ALLOW_UNSECURE_COMMANDS: true
  
jobs:
  release_and_publish:
    name: Create release and publish
    strategy:
      matrix:
        arch: ['win-x64', 'win-arm64', 'linux-x64', 'linux-arm64', 'osx-x64']
        
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 8.0.x
      - name: Get commit message
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=format:%s)
          echo "::set-env name=COMMIT_MESSAGE::$COMMIT_MESSAGE"
          
      - name: Build
        shell: bash
        run: |
          version=${{ github.run_number }}
          release_name_standalone="jsunmap-$version-${{ matrix.arch }}-standalone"
          release_name="jsunmap-$version-${{ matrix.arch }}"

          # Self contained
          dotnet publish ./src/jsunmap.csproj -c Release -r "${{ matrix.arch }}" -o "$release_name_standalone" --self-contained -p:PublishTrimmed=true

          # Framework dependant
          dotnet publish ./src/jsunmap.csproj -c Release -r "${{ matrix.arch }}" -o "$release_name" --self-contained false -p:PublishTrimmed=false

          if [ "${{ matrix.arch }}" == "win-x64" ]; then
            # Pack for standalone version
            7z a -tzip "${release_name_standalone}.zip" "./${release_name_standalone}/*"
            
            # Pack for Framework dependant version
            7z a -tzip "${release_name}.zip" "./${release_name}/*"
          else
            tar czvf "${release_name_standalone}.tar.gz" "$release_name_standalone"
            
            tar czvf "${release_name}.tar.gz" "$release_name"
          fi

          rm -r "$release_name_standalone"
          rm -r "$release_name"

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: "jsunmap-*"
      
